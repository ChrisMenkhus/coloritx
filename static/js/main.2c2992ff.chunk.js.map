{"version":3,"sources":["img/codeImg.png","components/BigNavbar.js","components/ToggleNavButton.js","components/PageContainer.js","components/Container.js","components/Wrapper.js","components/CircularContainer.js","components/ColorBox.js","pages/Home.js","components/Colors.js","pages/Login.js","pages/Signup.js","pages/Themes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopButtonContainer","styled","div","NavButton","Nav","nav","NavItems","NavItem","props","bordercolor","OpenStyle","ClosedStyle","BigNavbar","NavContainer","navToggled","onClick","toggleNav","name","setRedirectPath","loggedIn","logOut","Style","ToggleNavButton","section","marginleft","bgcolor","height","margin","margintop","width","scroll","Container","children","flexdirection","mobileflexdirection","mobilewidth","mobileheight","neoEnabled","bgColor","borderwidth","borderradius","shadowBlur","CircularContainer","className","ColorBox","useClippy","setClipboard","useState","editMode","toggleEditMode","setName","color","setColor","id","Wrapper","defaultValue","onChange","e","target","value","colorCircleSize","type","iconName","updateColor","getRandomColor","console","log","disableButtons","deleteColor","Home","src","codeImg","Login","email","setEmail","password","setPassword","errorText","setErrorText","fetch","method","headers","body","JSON","stringify","then","response","json","user","user_id","loadUser","Signup","Math","random","toString","slice","Themes","selectedTheme","setTheSelectedTheme","selectedThemeName","setSelectedThemeName","editSelectedThemeName","toggleEditSelectedThemeName","listOfThemes","setListOfThemes","listOfColors","setListOfColors","setSelectedTheme","theme_id","createListOfColors","useEffect","createListOfThemes","a","res","themeArray","Object","values","createTheme","deleteTheme","updateTheme","colorsArray","createColor","color_id","hex","newListOfColors","map","entry","i","key","ColoredText","newJsExportOfColors","newJsExportOfColors2","newJ","newJ2","join","exportText","App","toggleLoggedIn","userId","setUserId","redirectPath","path","to","checkPath","PageContainer","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c2992ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/codeImg.1dc35207.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TopButtonContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  margin-bottom: auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst NavButton = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  width: 34px;\r\n  height: 34px;\r\n  margin-left: auto;\r\n  margin-right: 1.5rem;\r\n  margin-top: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 15px;\r\n  ion-icon {\r\n    color: #545454;\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: auto;\r\n  }\r\n\r\n  transition: all 0.1s;\r\n  \r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  width: 100%;\r\n  height: auto;\r\n  margin-bottom: auto;\r\n  margin: 0px 3rem 3rem 0rem;\r\n`;\r\n\r\nconst NavItems = styled.div`\r\n  margin: auto 0rem auto 2rem;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(8rem, 1fr));\r\n  grid-auto-rows: 1fr;\r\n  gap: 0.5rem;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    padding-bottom: 100%;\r\n    grid-row: 1 / 1;\r\n    grid-column: 1 / 1;\r\n  }\r\n\r\n  & > *:first-child {\r\n    grid-row: 1 / 1;\r\n    grid-column: 1 / 1;\r\n  }\r\n`;\r\n\r\nconst NavItem = styled.div`\r\n  background-color: #f4f4f4;\r\n  border-bottom: solid 8px;\r\n  border-color: ${props => (props.bordercolor ? props.bordercolor : \"red\")};\r\n  transition: all 0.1s;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  h4 {\r\n    margin: auto auto 0px auto;\r\n    color: #232323;\r\n    font-weight: normal;\r\n  }\r\n\r\n  ion-icon {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    padding-top: 3rem;\r\n    margin: auto auto auto auto;\r\n    color: ${props => (props.bordercolor ? props.bordercolor : \"red\")};\r\n    transition: all 0.05s;\r\n  }\r\n\r\n  &:hover {\r\n    margin: 0.2rem;\r\n  }\r\n`;\r\n\r\n  const OpenStyle = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    position: fixed;\r\n    top: 0;\r\n    z-index: 1;\r\n    overflow-x: hidden;\r\n    background-color: #1d2224;\r\n    height: 100%;\r\n    width: 25vw;\r\n\r\n    @media only screen and (max-width: 1200px) {\r\n      height: 100vh;\r\n      width: 100vw;\r\n    }\r\n  `;\r\n\r\n  const ClosedStyle = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    position: fixed;\r\n    top: 0;\r\n    z-index: 1;\r\n    overflow-x: hidden;\r\n    background-color: #1d2224;\r\n    height: 100%;\r\n    width: 0vw;\r\n  `;\r\n\r\nconst BigNavbar = props => {\r\n  const NavContainer =\r\n    props.navToggled === true ? OpenStyle : ClosedStyle;\r\n\r\n  return (\r\n    <NavContainer>\r\n      <TopButtonContainer>\r\n        <NavButton\r\n          onClick={() => {\r\n            props.toggleNav(false);\r\n          }}\r\n        >\r\n          <ion-icon name=\"close-circle-outline\"></ion-icon>\r\n        </NavButton>\r\n      </TopButtonContainer>\r\n      \r\n      <Nav>\r\n        <NavItems>\r\n          <NavItem\r\n            bordercolor=\"#FF66A3\"\r\n            onClick={() => {\r\n              props.setRedirectPath(\"home\");\r\n              props.toggleNav(false);\r\n            }}\r\n          >\r\n            <ion-icon name=\"home-outline\"></ion-icon>\r\n            <h4>home</h4>\r\n          </NavItem>\r\n          <NavItem bordercolor=\"#3CBBEA\">\r\n            <ion-icon name=\"help-circle-outline\"></ion-icon>\r\n            <h4>information</h4>\r\n          </NavItem>\r\n          {props.loggedIn ? \r\n          <NavItem bordercolor=\"#9F63ED\"\r\n            onClick={() => {\r\n              props.setRedirectPath(\"themes\");\r\n              props.toggleNav(false);\r\n            }}\r\n          >\r\n            <ion-icon name=\"color-palette-outline\"></ion-icon>\r\n            <h4>themes</h4>\r\n          </NavItem> : null }\r\n          {props.loggedIn ?  \r\n          <NavItem bordercolor=\"#F6BC4B\">\r\n            <ion-icon name=\"person-circle-outline\"></ion-icon>\r\n            <h4>account</h4>\r\n          </NavItem>\r\n          :\r\n          <NavItem\r\n            bordercolor=\"#F6BC4B\"\r\n            onClick={() => {\r\n              props.setRedirectPath(\"login\");\r\n              props.toggleNav(false);\r\n            }}\r\n          >\r\n            <ion-icon name=\"log-in-outline\"></ion-icon>\r\n            <h4>sign in</h4>\r\n          </NavItem>\r\n          }\r\n\r\n          {props.loggedIn ?\r\n          <NavItem bordercolor=\"#F6BC4B\">\r\n            <ion-icon name=\"log-out-outline\" onClick={()=>{props.logOut();\r\n              props.setRedirectPath(\"home\") }}\r\n              ></ion-icon>\r\n            <h4>logout</h4>\r\n          </NavItem>\r\n            :\r\n          <NavItem\r\n            bordercolor=\"#F6BC4B\"\r\n            onClick={() => {\r\n              props.setRedirectPath(\"signup\");\r\n              props.toggleNav(false);\r\n            }}\r\n          >\r\n            <ion-icon name=\"person-add-outline\"></ion-icon>\r\n            <h4>sign up</h4>\r\n          </NavItem>\r\n          }\r\n\r\n          \r\n\r\n          \r\n          \r\n          \r\n          \r\n          \r\n        </NavItems>\r\n      </Nav>\r\n    </NavContainer>\r\n  );\r\n};\r\n\r\nexport default BigNavbar;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Style = styled.div`\r\n    \r\n    position: fixed;\r\n    top: 0;\r\n\r\n    width: 100%;\r\n    display: flex;\r\n\r\n    width: 34px; height: 34px;\r\n    margin-right: auto;\r\n    margin-left: 1.5rem;\r\n    margin-top: 20px;\r\n    background-color: #1D2224;\r\n    border-radius: 15px;\r\n\r\n\r\n\r\n    ion-icon {     \r\n      color: white;\r\n      width: 20px; height: 20px;\r\n      margin: auto;   \r\n    }\r\n`;\r\n\r\n\r\nfunction ToggleNavButton(props) {\r\n  return (\r\n      <Style onClick={()=>{\r\n        props.toggleNav(!props.navToggled)\r\n        }}>\r\n          <ion-icon name=\"grid-outline\"></ion-icon>    \r\n      </Style>\r\n  );\r\n}\r\n\r\nexport default ToggleNavButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nexport default styled.section`\r\n\tmargin: 0px;\r\n  margin-left: ${props => props.marginleft ? props.marginleft : '0px'};\r\n`;\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Style = styled.div`\r\n  width: auto;\r\n  //min-width: 350px;\r\n  //max-width: 600px;\r\n  background-color: ${props => props.bgcolor ? props.bgcolor : '#f3f3f3'}; \r\n  margin: 3rem auto 1rem auto;\r\n  border: 1px solid #fafafa;\r\n  border-radius: 1rem;\r\n  height: ${props => props.height ? props.height : 'auto'};\r\n  margin-top: auto; margin-bottom: auto;\r\n  margin-left: auto; margin-right: auto;\r\n  margin: ${props => props.margin ? props.margin : 'auto 1rem auto 1rem'};\r\n  margin-top: ${props => props.margintop ? props.margintop : 'auto'};\r\n  width: ${props => props.width ? props.width : '60%'};\r\n  padding: 0px;\r\n\r\n  overflow-y: ${props => props.scroll ? 'scroll' : null};\r\n\r\n  @media screen and (max-width: 992px) {\r\n\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Container = props => {\r\n  return <Style \r\n  margintop={props.margintop}\r\n  width={props.width}\r\n  margin={props.margin}\r\n  height={props.height}\r\n  bgcolor={props.bgcolor}\r\n  scroll={props.scroll}\r\n  >{props.children}</Style>;\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Style = styled.div`\r\n  display: flex;\r\n  flex: wrap;\r\n  height: ${props => props.height ? props.height : 'auto'};\r\n  width: ${props => props.width ? props.width : '100%'};\r\n  margin: ${props => props.margin ? props.margin : 'auto'};\r\n  flex-direction: ${props => props.flexdirection ? props.flexdirection : 'column'};\r\n\r\n  justify-content: center; justify-self: center; align-items: center;\r\n\r\n  overflow: ${props => props.scroll ? 'scroll' : null};\r\n\r\n  @media screen and (max-width: 992px) {\r\n\r\n    flex-direction: ${props => props.mobileflexdirection ? props.mobileflexdirection : props.flexdirection ? props.flexdirection : 'column'};\r\n    width: ${props => props.mobilewidth ? props.mobilewidth : props.width ? props.width : '100%'};\r\n    height: ${props => props.mobileheight ? props.mobileheight : props.height ? props.height : 'auto'};\r\n  }\r\n  \r\n`;\r\n\r\nconst Container = props => {\r\n  const {height, width, margin, flexdirection, scroll, mobileflexdirection, mobilewidth, mobileheight} = props;\r\n  return(\r\n  <Style\r\n    height={height}\r\n    width={width}\r\n    margin={margin}\r\n    flexdirection={flexdirection}\r\n    mobileflexdirection={mobileflexdirection}\r\n    scroll={scroll}\r\n    mobilewidth={mobilewidth}\r\n    mobileheight={mobileheight}\r\n  >\r\n  {props.children}\r\n  </Style>);\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Container from \"../components/Container.js\";\r\nimport Wrapper from \"../components/Wrapper.js\";\r\n\r\nconst Style = styled.div`\r\n  display: flex; margin: auto auto;\r\n  background-color: ${props => props.neoEnabled ? 'null' : props.bgColor ? props.bgColor : '#F9F9F9'};\r\n  height: 100%; width: 100%;\r\n  \r\n  border: 8px solid #F9F9F9;\r\n  border-width: ${props => props.borderwidth ? props.borderwidth : '8px'};\r\n  border-radius: ${props => props.borderradius ? props.borderradius : '50%'};\r\n  line-height: 100%;\r\n  //dark shadow\r\n  box-shadow: 4px 2px 6px rgb(25,25,25, ${props => props.shadowBlur ? props.shadowBlur : '0.08'} ), -4px -6px 8px rgba(255,255,255, ${props => props.shadowBlur ? props.shadowBlur : '0.08'} );\r\n  \r\n\r\n\r\n\r\n  //light shadow\r\n  .neo {\r\n  margin: 0px;\r\n\r\n    height: 100%; width: 100%; \r\n    border-radius: ${props => props.borderradius ? props.borderradius : '50%'}; \r\n    display: flex; margin: auto;\r\n    box-shadow: ${props => props.neoEnabled ? \r\n      'inset 4px 2px 6px rgb(25,25,25,0.1),  inset -4px -6px 8px rgba(255,255,255, 0.5)'\r\n      :\r\n      'none'\r\n    };\r\n\r\n  }\r\n`;\r\n\r\nconst CircularContainer = props => {\r\n  return (\r\n    <Style neoEnabled={props.neoEnabled} bgColor={props.bgColor}\r\n      borderwidth={props.borderwidth}\r\n      shadowBlur={props.shadowBlur}\r\n      borderradius={props.borderradius}\r\n      onClick={props.onClick}\r\n      >\r\n      <div className='neo'>\r\n      {props.children}\r\n      </div>\r\n    </Style>\r\n  );\r\n};\r\n\r\nexport default CircularContainer;\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Container from \"./Container.js\";\r\nimport Wrapper from \"./Wrapper.js\";\r\nimport CircularContainer from \"./CircularContainer\";\r\nimport useClippy from 'use-clippy';\r\n\r\n\r\nconst Style = styled.div`\r\n  \r\n  padding: 1rem;\r\n\r\n  ion-icon {\r\n    transform: scale(0.8);\r\n    margin: auto;\r\n  }\r\n  ion-icon:hover {\r\n    transform: scale(1.0);\r\n  }\r\n\r\n.tooltip {\r\n  width: 100%; height: 100%; margin: auto;\r\n  padding: 0px; margin-top: 0.2rem;\r\n}\r\n\r\n/* Tooltip text */\r\n.tooltip .tooltiptext {\r\n  font-size: 0.7rem;\r\n  display: none;\r\n  background-color: black;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 5px;\r\n  border-radius: 6px;\r\n \r\n  /* Position the tooltip text - see examples below! */\r\n  position: relative;\r\n  z-index: 500;\r\n  width: fit-content;\r\n  height: auto;\r\n  \r\n}\r\n\r\n/* Show the tooltip text when you mouse over the tooltip container */\r\n.tooltip:hover .tooltiptext {\r\n  display: flex;\r\n}\r\n\r\n\r\n`;\r\n\r\nconst ColorBox = props => {\r\n  const [ clipboard, setClipboard ] = useClippy();\r\n  const [editMode, toggleEditMode] = useState(false);\r\n  const [name, setName] = useState(props.name);\r\n  const [color, setColor] = useState(props.color);\r\n  const id = props.id;\r\n\r\n  return (\r\n//     <Style onClick={()=>(\r\n//       props.setSelectedTheme ?\r\n//       props.setSelectedTheme(id) :\r\n//       null\r\n// \r\n//       )}>\r\n    <Style>\r\n      {/* main wrapper */}\r\n      <Wrapper\r\n        margin={props.margin ? props.margin : '3rem 1rem'}\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        flexdirection=\"row\"\r\n      >\r\n\r\n        {editMode ? \r\n          <Wrapper flexdirection=\"collumn\" width=\"auto\" margin=\"0px\">\r\n          <Wrapper margin=\"0px\">\r\n            {/* <label>variable name:</label> */}\r\n           {editMode ? \r\n            <input className='colorInput' defaultValue={props.name ? props.name : 'add title property'}\r\n              onChange={(e)=>{setName(e.target.value)}}\r\n              /> \r\n            : null}\r\n            {/* Circle */}\r\n            <Wrapper width=\"7rem\" height=\"7rem\" >\r\n              <CircularContainer neoEnabled=\"true\" borderwidth=\"4px\" borderradius='50%' >\r\n                <Wrapper width='80%' height='80%' >\r\n                  <CircularContainer borderradius='50%' colorCircleSize='2rem'\r\n                    bgColor={color ? color : 'white'}\r\n                    borderwidth=\"0px\"\r\n                    shadowBlur=\"0.2\"\r\n\r\n                  >\r\n                  <Wrapper flexdirection='column'>\r\n                  <label>color:</label>\r\n                  <input type='text' className='colorInput' value={color}\r\n                    onChange={(e)=>{setColor(e.target.value)}}\r\n                  \r\n                  />\r\n                  <input type='color' className='colorInput' value={color}\r\n                    onChange={(e)=>{setColor(e.target.value)}\r\n                  }\r\n                  />\r\n                  </Wrapper>\r\n                  </CircularContainer>\r\n                </Wrapper>\r\n              </CircularContainer>\r\n            </Wrapper>\r\n          </Wrapper>\r\n        </Wrapper>\r\n\r\n        :\r\n        <Wrapper flexdirection=\"collumn\" width=\"auto\" margin=\"0px\">\r\n          <Wrapper margin=\"0px\">\r\n            <h5>\r\n              <div className=\"neoIt\"> {props.name ? props.name : 'add variable name'} </div>\r\n            </h5>\r\n            {/* Circle */}\r\n            <Wrapper width=\"7rem\" height=\"7rem\">\r\n              <CircularContainer neoEnabled=\"true\" borderwidth=\"4px\">\r\n                         \r\n                <Wrapper width={props.colorCircleSize ? props.colorCircleSize : '2rem'} height={props.colorCircleSize ? props.colorCircleSize : '2rem'}>\r\n                  <CircularContainer\r\n                    bgColor={props.color ? props.color : 'white'}\r\n                    borderwidth=\"0px\"\r\n                    shadowBlur=\"0.2\"\r\n                  >\r\n                  {props.iconName ? \r\n                      <ion-icon name={props.iconName} onClick={props.onClick}></ion-icon> : \r\n                      props.color ? <h2>{props.color}</h2> : null\r\n                  } \r\n                  </CircularContainer>\r\n                </Wrapper>\r\n                \r\n              </CircularContainer>\r\n            </Wrapper>\r\n          </Wrapper>\r\n        </Wrapper>\r\n        }\r\n        \r\n        {editMode ? \r\n        <Wrapper width=\"auto\" margin=\"0rem 0rem 0rem 1rem\" height=\"68%\">\r\n          <Wrapper\r\n            width=\"1.5rem\"\r\n            height=\"1.5rem\"\r\n            margin=\"auto auto 0.5rem auto\"\r\n          >\r\n            <CircularContainer\r\n              bgColor=\"white\"\r\n              borderwidth=\"0px\"\r\n              shadowBlur=\"0.2\"\r\n            >\r\n              <div className='tooltip'>\r\n              <Wrapper width=\"1rem\" height=\"1rem\" className='tooltip' margin='auto' margintop='auto'>\r\n                <ion-icon name=\"save-outline\" onClick={()=>{\r\n                  toggleEditMode(false); props.updateColor(id, color, name);\r\n                  }}></ion-icon>      \r\n              </Wrapper>\r\n                <p className=\"tooltiptext\">save</p>                      \r\n              </div>\r\n            </CircularContainer>\r\n          </Wrapper>\r\n          <Wrapper\r\n            width=\"1.5rem\" height=\"1.5rem\"\r\n            margin=\"auto auto 0.5rem auto\"\r\n          >\r\n            <CircularContainer\r\n              bgColor=\"white\"\r\n              borderwidth=\"0px\"\r\n              shadowBlur=\"0.2\"\r\n            >\r\n            <div className='tooltip'>\r\n              <Wrapper width=\"1rem\" height=\"1rem\">\r\n                <ion-icon name=\"infinite-outline\" onClick={()=>{\r\n                  setColor(props.getRandomColor()); console.log(color);\r\n                  }}></ion-icon>\r\n              </Wrapper>\r\n                <p className=\"tooltiptext\">random color</p>  \r\n              </div>\r\n            </CircularContainer>\r\n          </Wrapper>\r\n          <Wrapper width=\"1.5rem\" height=\"1.5rem\">\r\n            <CircularContainer\r\n              bgColor=\"white\"\r\n              borderwidth=\"0px\"\r\n              shadowBlur=\"0.2\"\r\n            >\r\n            <div className='tooltip'>            \r\n              <Wrapper width=\"1rem\" height=\"1rem\">\r\n                <ion-icon name=\"close-outline\" onClick={()=>{\r\n                  toggleEditMode(false); setColor(props.color);\r\n                  }}></ion-icon>\r\n              </Wrapper>\r\n                <p className=\"tooltiptext\">cancel</p>  \r\n              </div>\r\n            </CircularContainer>\r\n          </Wrapper>\r\n        </Wrapper>\r\n        : null}\r\n        { props.disableButtons ? null :\r\n        !editMode ?    \r\n        <Wrapper width=\"auto\" margin=\"0rem 0rem 0rem 1rem\" height=\"100%\">\r\n          <Wrapper\r\n            width=\"1.5rem\"\r\n            height=\"1.5rem\"\r\n            margin=\"auto auto 0.5rem auto\"\r\n          >\r\n            <CircularContainer\r\n              bgColor=\"white\"\r\n              borderwidth=\"0px\"\r\n              shadowBlur=\"0.2\"\r\n            >\r\n            <div className='tooltip'> \r\n              <Wrapper width=\"1rem\" height=\"1rem\" >\r\n                <ion-icon name=\"pencil-outline\" onClick={()=>{toggleEditMode(true); }}></ion-icon>\r\n              </Wrapper>\r\n                <p className=\"tooltiptext\">edit</p>  \r\n              </div>\r\n            </CircularContainer>\r\n          </Wrapper>\r\n          <Wrapper width=\"1.5rem\" height=\"1.5rem\"\r\n            margin=\"auto auto 0.5rem auto\"\r\n            >\r\n            <CircularContainer\r\n              bgColor=\"white\"\r\n              borderwidth=\"0px\"\r\n              shadowBlur=\"0.2\"\r\n            >\r\n            <div className='tooltip'>             \r\n              <Wrapper width=\"1rem\" height=\"1rem\">\r\n                <ion-icon name=\"trash-outline\" onClick={()=>{props.deleteColor(id); }}></ion-icon>\r\n              </Wrapper>\r\n                <p className=\"tooltiptext\">delete</p>  \r\n              </div>\r\n            </CircularContainer>\r\n          </Wrapper>\r\n\r\n          <Wrapper width=\"1.5rem\" height=\"1.5rem\">\r\n            <CircularContainer\r\n              bgColor=\"white\"\r\n              borderwidth=\"0px\"\r\n              shadowBlur=\"0.2\"\r\n            >\r\n            <div className='tooltip'>                        \r\n              <Wrapper width=\"1rem\" height=\"1rem\">\r\n                <ion-icon name=\"copy-outline\"\r\n                  onClick={()=>{ setClipboard( \r\n                    color\r\n                  ) }}\r\n                  ></ion-icon>\r\n              </Wrapper>\r\n                <p className=\"tooltiptext\">copy</p>  \r\n              </div>\r\n            </CircularContainer>\r\n          </Wrapper>\r\n        </Wrapper> : null}\r\n\r\n        \r\n\r\n        \r\n      </Wrapper>\r\n    </Style>\r\n  );\r\n};\r\n\r\nexport default ColorBox;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport Container from '../components/Container.js'\r\nimport Wrapper from '../components/Wrapper.js'\r\nimport ColorBox from '../components/ColorBox.js'\r\nimport * as Colors from '../components/Colors.js'\r\n\r\nimport codeImg from '../img/codeImg.png'\r\n\r\n\r\nconst Style = styled.div`\r\n    \r\n  .bg1 {\r\n    width: 100%; \r\n    height: auto;\r\n    background: ${Colors.background_light};\r\n    padding-top: 2rem;\r\n\r\n  }\r\n  .bg2 {\r\n    margin-top: 12rem; \r\n    padding-top: 1rem;\r\n    width: 100%; \r\n    height: auto;\r\n    padding-bottom: 8rem;\r\n    background: ${Colors.primary};\r\n    background: linear-gradient(0deg, rgba(160,88,213,1) 0%, rgba(199,78,178,1) 100%);\r\n  }\r\n\r\n  .circleButtons {\r\n    display: relative;\r\n    bottom: 10;\r\n    background-color: null;\r\n    margin: auto auto 0.5rem auto;\r\n    .circleButton {\r\n      border-radius: 45px;\r\n      width: 15px; height: 15px;\r\n      border: 1px solid #C551B3;\r\n      margin: 0.5rem;\r\n    }\r\n    .active {\r\n      background-color: #C551B3;\r\n    }\r\n  }\r\n\r\n  .box {\r\n    height: 100%;\r\n    /*border: 1px solid gray;*/\r\n    margin: 2rem 2rem 0.5rem 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n  }\r\n\r\n  .colorBox {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n  }\r\n\r\n\r\n  .codeImg {\r\n      padding: 0% 10% 0% 10%;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  .bannerTitle {\r\n    font-size: 3.5rem;\r\n    padding: 2rem;\r\n  }\r\n\r\n`;\r\n\r\nconst ColoredText = styled.div`\r\n    color: ${props => props.color ? props.color : 'black'};\r\n    display: inline;\r\n    line-height: auto;\r\n    padding: 0px;\r\n  `;\r\n\r\nconst Home = (props) => {\r\n    console.log(props.loggedIn);\r\n  return (\r\n    <Style>\r\n      <div className='bg1'>\r\n      <Wrapper height='auto'>\r\n      <Container margintop='3rem'>\r\n      <h1><span className='bannerTitle'>Color It X</span><br/><span>Colors For All Projects</span></h1>\r\n      {props.loggedIn === true ? \r\n      <div className='buttons'>\r\n        <button className='purple-button' onClick={()=>{props.setRedirectPath('themes')}}>\r\n        My Themes\r\n        </button>\r\n      </div>\r\n        :\r\n      <div className='buttons'>\r\n      <button onClick={()=>{props.setRedirectPath('login')}}>\r\n        Login\r\n      </button>\r\n      \r\n      <button className='purple-button' onClick={()=>{props.setRedirectPath('signup')}}>\r\n        Signup\r\n      </button>\r\n      </div>\r\n      }\r\n      </Container>\r\n      </Wrapper>\r\n      </div>\r\n      \r\n\r\n      <div className='bg2'>\r\n      <Wrapper height='auto'>\r\n      <Container margintop='-10rem'>\r\n        <h1><span>easily save colors for your web apps</span></h1>\r\n        <div className='box'>\r\n          <div className='colorBox'>\r\n          <ColorBox\r\n                  name=\"primary\"\r\n                  color='#a058d5'\r\n                  colorCircleSize=\"4rem\"\r\n                  disableButtons={true}\r\n                  margin=\"auto\"\r\n          />\r\n          <ColorBox\r\n                  name=\"secondary\"\r\n                  color='#fbbb26'\r\n                  colorCircleSize=\"4rem\"\r\n                  disableButtons={true}\r\n                  margin=\"auto\"\r\n          />\r\n          \r\n          </div>\r\n        {/* <div className='circleButtons'> */}\r\n        {/*   <button className='circleButton'/> */}\r\n        {/*   <button className='circleButton active'/> */}\r\n        {/*   <button className='circleButton'/>          */}\r\n        {/* </div> */}\r\n        </div>\r\n        <div className='buttons'>\r\n        {/* <button> */}\r\n        {/* Try As Guest */}\r\n        {/* </button> */}\r\n        </div>\r\n      </Container>\r\n      </Wrapper>\r\n\r\n      <Wrapper height='auto' margin='auto auto 4rem auto'>\r\n      <Container margintop='3rem'>\r\n        <h1><span>export as code to quickly swap colors</span></h1>\r\n        <div className='codeImg'>\r\n          <img src={codeImg}/>\r\n        </div>\r\n        <div className='buttons'>\r\n        <button className='purple-button' onClick={()=>{props.setRedirectPath('signup')}}>\r\n        Signup\r\n        </button>\r\n        </div>\r\n      </Container>\r\n      </Wrapper>\r\n      </div>\r\n\r\n      <div className='bg'/>\r\n    </Style>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","const primary = '#a058d5';\r\nconst background_light = '#E8E8E8';\r\nconst background_light_neo = '#f3f3f3';\r\nconst font_color = '#494949';\r\nconst background_dark = '#1d2224';\r\nconst secondary = '#fbbb26';\r\nexport {\r\nprimary,\r\nbackground_light,\r\nbackground_light_neo,\r\nfont_color,\r\nbackground_dark,\r\nsecondary,\r\n}","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Container from \"../components/Container.js\";\r\nimport Wrapper from \"../components/Wrapper.js\";\r\n\r\nconst Style = styled.div`\r\n    label {\r\n      text-align: center;\r\n      width: 100%;\r\n      padding-bottom: 0.2rem;\r\n      font-weight: lighter;\r\n      font-size: 1.1rem;\r\n    }\r\n    input {\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      background-color: #f9f9f9;\r\n      border: 0px;\r\n      padding: 0.2rem 0.3rem;\r\n      -webkit-box-shadow: -2px -3px 4px 5px rgba(255, 255, 255, 0.35);\r\n      box-shadow: -2px -3px 4px 5px rgba(255, 255, 255, 0.35);\r\n      border-bottom: 1px solid #a5a5a5;\r\n    }\r\n    .checkbox {\r\n      display: inline;\r\n      margin: auto;\r\n      margin-top: 0.5rem;\r\n      outline: none;\r\n    }\r\n\r\n  .errorText {\r\n    color: red;\r\n  }\r\n`;\r\n\r\nconst Login = props => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorText, setErrorText] = useState();\r\n\r\n\r\n  const handleSubmit = event => {\r\n  fetch('http://localhost:3000/signin', {\r\n    method: 'post',\r\n    headers: {'Content-type': 'application/json'},\r\n    body: JSON.stringify({\r\n    email: email,\r\n    password: password\r\n    })\r\n  })\r\n  .then(response => response.json())\r\n  .then(user => {\r\n    console.log(user);\r\n    if (user.user_id) {\r\n      console.log('logged in');\r\n      props.loadUser(user);  \r\n      props.setRedirectPath(\"themes\");  \r\n    }\r\n    else {\r\n      setErrorText(user);\r\n    }\r\n\r\n  })  \r\n  };\r\n\r\n  return (\r\n    <Style>\r\n      <Wrapper height=\"100vh\" width='60%' mobilewidth='auto'>\r\n        <Container className=\"container top\">\r\n          <h1>Login</h1>\r\n          <Wrapper>\r\n            <label>email</label>\r\n            <Wrapper>\r\n              <input type=\"text\" onChange={(e)=>{setEmail(e.target.value)}}></input>\r\n            </Wrapper>\r\n            <label>password</label>\r\n            <Wrapper>\r\n              <input type=\"password\" onChange={(e)=>{setPassword(e.target.value)}}></input>\r\n            </Wrapper>\r\n            <div>\r\n              <label>keep me logged in?</label>\r\n              <Wrapper flexdirection='row'>\r\n                <input className=\"checkbox\" type=\"checkbox\" />\r\n              </Wrapper>\r\n            </div>\r\n          </Wrapper>\r\n          <p className='errorText'>{errorText ? errorText : null}</p>\r\n\r\n          <div className=\"buttons\">\r\n            <button className=\"purple-button\" onClick={(e)=>{ handleSubmit() }}>Login</button>\r\n          </div>\r\n        </Container>\r\n      </Wrapper>\r\n    </Style>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Container from \"../components/Container.js\";\r\nimport Wrapper from \"../components/Wrapper.js\";\r\n\r\nconst Style = styled.div`\r\n  label {\r\n    text-align: center;\r\n    width: 100%;\r\n    padding-bottom: 0.2rem;\r\n    font-weight: lighter;\r\n    font-size: 1.1rem;\r\n  }\r\n  input {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    background-color: #f9f9f9;\r\n    border: 0px;\r\n    padding: 0.2rem 0.3rem;\r\n    -webkit-box-shadow: -2px -3px 4px 5px rgba(255, 255, 255, 0.35);\r\n    box-shadow: -2px -3px 4px 5px rgba(255, 255, 255, 0.35);\r\n    border-bottom: 1px solid #a5a5a5;\r\n  }\r\n  .checkbox {\r\n    display: inline;\r\n    margin: auto;\r\n    margin-top: 0.5rem;\r\n    outline: none;\r\n  }\r\n\r\n  .errorText {\r\n    color: red;\r\n  }\r\n`;\r\n\r\nconst Signup = props => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [guest, setGuest] = useState(\"\");\r\n  const [errorText, setErrorText] = useState();\r\n\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"submiting form\");\r\n    fetch(\"http://localhost:3000/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n        name: name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.user_id) {\r\n          console.log('signed up!');\r\n          props.loadUser(user);  \r\n          props.setRedirectPath(\"home\");  \r\n        } else {\r\n          console.log(user);\r\n          setErrorText(user);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Style>\r\n      <Wrapper height=\"100vh\" width='60%' mobilewidth='auto'>\r\n        <Container>\r\n          <h1>Signup</h1>\r\n          <Wrapper className=\"inputs\">\r\n            <label>name</label>\r\n            <Wrapper className=\"inputContainer\">\r\n              <input type=\"text\" onChange={(e)=>{setName(e.target.value)}}></input>\r\n            </Wrapper>\r\n            <label>email*</label>\r\n            <Wrapper className=\"inputContainer\">\r\n              <input type=\"text\" onChange={(e)=>{setEmail(e.target.value)}}></input>\r\n            </Wrapper>\r\n            <label>password*</label>\r\n            <Wrapper className=\"inputContainer\">\r\n              <input type=\"password\" onChange={(e)=>{setPassword(e.target.value)}}></input>\r\n            </Wrapper>\r\n            <div>\r\n              <label>keep me logged in?</label>\r\n              <Wrapper flexdirection=\"row\">\r\n                <input className=\"checkbox\" type=\"checkbox\" />\r\n              </Wrapper>\r\n            </div>\r\n          </Wrapper>\r\n          <p className='errorText'>{errorText ? errorText : null}</p>\r\n\r\n          <div className=\"buttons\">\r\n            <button className=\"purple-button\" onClick={(e)=>{ handleSubmit() }}>Signup</button>\r\n          </div>\r\n        </Container>\r\n      </Wrapper>\r\n    </Style>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Container from \"../components/Container.js\";\r\nimport Wrapper from \"../components/Wrapper.js\";\r\nimport CircularContainer from \"../components/CircularContainer\";\r\nimport ColorBox from \"../components/ColorBox.js\";\r\n\r\nimport * as Colors from '../components/Colors.js'\r\n\r\nimport useClippy from 'use-clippy';\r\n\r\nconst Style = styled.div`\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(12rem, 1fr));\r\n  }\r\n\r\n  code {\r\n    width: 100%;\r\n    background-color: ${Colors.background_dark};\r\n    text-align: left;\r\n    line-height: 120%;\r\n    padding: 1.5rem;\r\n    p {\r\n\r\n      display: inline;\r\n    span {\r\n      color: 'green';\r\n    }\r\n    .space {\r\n      margin-left: 2rem;\r\n    }\r\n  }\r\n\r\n  .green {\r\n    text-decoration: underline;\r\n  }\r\n  }\r\n\r\n  ion-icon {\r\n    width: 60%; height: 60%;\r\n  }\r\n\r\n  .tooltip {\r\n  width: 100%; height: 100%; margin: auto;\r\n  padding: 0px; margin-top: 0.2rem;\r\n  }\r\n\r\n  /* Tooltip text */\r\n  .tooltip .tooltiptext {\r\n    font-size: 0.7rem;\r\n    display: none;\r\n    background-color: black;\r\n    color: #fff;\r\n    text-align: center;\r\n    padding: 5px;\r\n    border-radius: 6px;\r\n   \r\n    /* Position the tooltip text - see examples below! */\r\n    position: relative;\r\n    z-index: 500;\r\n    width: fit-content;\r\n    height: auto;\r\n    \r\n  }\r\n\r\n  /* Show the tooltip text when you mouse over the tooltip container */\r\n  .tooltip:hover .tooltiptext {\r\n    display: flex;\r\n  }\r\n\r\n\r\n  .copyBtn {\r\n    margin: auto;\r\n  }\r\n\r\n  \r\n`;\r\n\r\n  const getRandomColor = () => {\r\n    return (\r\n      '#'+('00000'+(Math.random()*(1<<24)|0).toString(16)).slice(-6)\r\n      );\r\n  }\r\n\r\nconst Themes = props => {\r\n  const [ clipboard, setClipboard ] = useClippy();\r\n  const [selectedTheme, setTheSelectedTheme] = useState();\r\n  const [selectedThemeName, setSelectedThemeName] = useState();\r\n\r\n  const [newColor, setNewColor] = useState(\"#B265C3\");\r\n  const [selectedColor, setSelectedColor] = useState();\r\n  const [newName, setNewName] = useState();\r\n  const [editSelectedThemeName, toggleEditSelectedThemeName] = useState();\r\n\r\n\r\n  const [listOfThemes, setListOfThemes] = useState([]);\r\n  const [listOfColors, setListOfColors] = useState([]);\r\n\r\n  const setSelectedTheme = (theme_id, name) => {\r\n    setTheSelectedTheme(theme_id);\r\n    setSelectedThemeName(name)\r\n    createListOfColors(theme_id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    createListOfThemes();\r\n  }, [1]);\r\n\r\n  const createListOfThemes = async () => {\r\n    fetch(\"http://localhost:3000/readthemes\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: props.user_id\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        if (res) {\r\n          const themeArray = Object.values(res);\r\n          setListOfThemes(themeArray);\r\n        }\r\n      });\r\n  };\r\n\r\n  const createTheme = async () => {\r\n    fetch(\"http://localhost:3000/createtheme\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: props.user_id,\r\n        name: \"new theme\"\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        if (res) {\r\n          createListOfThemes();\r\n          setSelectedTheme(res.theme_id, res.name)\r\n        }\r\n      });\r\n  };\r\n\r\n  const deleteTheme = async () => {\r\n    fetch(\"http://localhost:3000/deletetheme\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        theme_id: selectedTheme\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        if (res) {\r\n          setSelectedTheme(\"\", \"\");\r\n          createListOfThemes();\r\n        }\r\n      });\r\n  };\r\n\r\n   const updateTheme = async (id, name) => {\r\n    fetch(\"http://localhost:3000/updatetheme\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        theme_id: id,\r\n        name: name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        if (res) {\r\n          createListOfThemes();\r\n          setSelectedTheme(res.theme_id, res.name)\r\n        }\r\n      });\r\n  };\r\n\r\n  const createListOfColors = async theme_id => {\r\n    fetch(\"http://localhost:3000/readcolors\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        theme_id: theme_id\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        if (res) {\r\n          const colorsArray = Object.values(res);\r\n          setListOfColors(colorsArray);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const createColor = async () => {\r\n    fetch(\"http://localhost:3000/createcolor\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        theme_id: selectedTheme\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        if (res) {\r\n          createListOfColors(selectedTheme);\r\n        }\r\n      });\r\n  };\r\n\r\n  const updateColor = async (id, color, name) => {\r\n    fetch(\"http://localhost:3000/updatecolor\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        color_id: id,\r\n        hex: color,\r\n        name: name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        if (res) {\r\n          createListOfColors(selectedTheme);\r\n        }\r\n      });\r\n  };\r\n\r\n  const deleteColor = async (id) => {\r\n    fetch(\"http://localhost:3000/deletecolor\", {\r\n      method: \"post\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        color_id: id,\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        if (res) {\r\n          createListOfColors(selectedTheme);\r\n        }\r\n      });\r\n  };\r\n\r\n  const newListOfColors = listOfColors.map((entry, i) => {\r\n    return (\r\n      <ColorBox\r\n        key={entry.color_id}\r\n        name={entry.name}\r\n        colorCircleSize=\"4rem\"\r\n        color={entry.hex ? entry.hex : \"white\"}\r\n        margin=\"auto\"\r\n        updateColor={updateColor}\r\n        id={entry.color_id}\r\n        deleteColor={deleteColor}\r\n        getRandomColor={getRandomColor}\r\n      />\r\n    );\r\n  });\r\n\r\n  const ColoredText = styled.div`\r\n    color: ${props => props.color ? props.color : 'black'};\r\n    display: inline;\r\n    line-height: 0.5rem;\r\n    padding: 0px;\r\n  `;\r\n\r\n  const newJsExportOfColors = listOfColors.map((entry, i) => {\r\n    return (\r\n      <div key={entry.theme_id + i}>\r\n        <p>const <span className='green'>{entry.name ? entry.name : 'null'}</span>{' '} = {\"'\"}</p>\r\n        <ColoredText color={entry.hex}>{entry.hex}</ColoredText><p>{\"'\"}{';'}</p>\r\n      </div>\r\n    );\r\n  });\r\n  const newJsExportOfColors2 = listOfColors.map((entry, i) => {\r\n    return (\r\n      <div key={entry.theme_id + i + 1}>\r\n        <p><span className='green space'>{entry.name ? entry.name : 'null'}</span>{','}</p>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const exportText = () => {\r\n    const newJ = listOfColors.map((entry, i) => {\r\n      return (\"const \" + entry.name + \" = '\" + entry.hex + \"';\" + ' ');\r\n    })\r\n    const newJ2 = listOfColors.map((entry, i) => {\r\n      return entry.name + ',';\r\n    })\r\n   return( \r\n    newJ.join('') + ' export {' +\r\n    newJ2.join('') + '}'\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <Style>\r\n      {/* { */}\r\n      {/*   props.loggedIn === true ? console.log('logged in') : props.setRedirectPath(\"home\") */}\r\n      {/*   } */}\r\n      <Wrapper flexdirection=\"row\" mobileflexdirection='column' height=\"100vh\" mobileheight='auto'>\r\n        {/* Themes Navigation Bar */}\r\n        <Wrapper width=\"auto\" mobilewidth='100%' margin=\"auto auto auto auto\" height=\"80vh\" mobileheight='100%'>\r\n          <Container height=\"100%\" width=\"auto\" scroll={true}>\r\n            <h1>\r\n              <span>themes</span>\r\n            </h1>\r\n            <Wrapper flexdirection=\"column\" height=\"fit-content\">\r\n              {/* new color button */}\r\n              <ColorBox\r\n                name=\"create new theme\"\r\n                color={Colors.background_light_neo}\r\n                disableButtons={true}\r\n                iconName=\"create-outline\"\r\n                colorCircleSize=\"3rem\"\r\n                margin=\"0rem\"\r\n                onClick={() => {\r\n                  createTheme();\r\n                }}\r\n              />\r\n              {listOfThemes.map((entry, i) => {\r\n                return (\r\n                  <ColorBox\r\n                    key={i}\r\n                    name={entry.name}\r\n                    disableButtons={true}\r\n                    colorCircleSize=\"3rem\"\r\n                    color={Colors.background_light_neo}\r\n                    // the place to get color\r\n                    margin=\"0rem\"\r\n                    iconName=\"open-outline\"\r\n                    onClick={() => {\r\n                      setSelectedTheme(entry.theme_id, entry.name);                    \r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </Wrapper>\r\n          </Container>\r\n        </Wrapper>\r\n        {/* Selected Theme Viewer */}\r\n        <Wrapper flexdirection='column' margin=\"10vh 1rem auto 0rem\" width='80%' height='auto' mobilewidth='100%' mobileheight='auto'>\r\n        <Wrapper width=\"100%\" margin=\"auto auto auto 0rem\" height='auto'>\r\n          <Container width=\"100%\" height='100%'>\r\n            <Wrapper flexdirection=\"row\" width=\"auto\">\r\n              {editSelectedThemeName ?\r\n                <input defaultValue={selectedThemeName ? selectedThemeName : 'add variable name'}\r\n              onChange={(e)=>{setSelectedThemeName(e.target.value)}} />\r\n                :\r\n              <h1>\r\n                <span>{selectedTheme ? selectedThemeName : \"select a theme\"}</span>\r\n              </h1>\r\n              }\r\n              {selectedTheme ? (\r\n                <Wrapper flexdirection='row' width='fit-content' margin='0.5rem'>\r\n                <Wrapper\r\n                  width=\"1.5rem\"\r\n                  height=\"1.5rem\"\r\n                  className=\"selectedThemeButtonContainer\"\r\n                  margin=\"0.5rem\"\r\n                >\r\n                  <CircularContainer\r\n                    bgColor=\"white\"\r\n                    borderwidth=\"0px\"\r\n                    shadowBlur=\"0.2\"\r\n                  >\r\n                  <div className='tooltip'> \r\n                    <ion-icon\r\n                      onClick={() => {\r\n                        if (editSelectedThemeName) {\r\n                          updateTheme(selectedTheme, selectedThemeName);\r\n                        }\r\n\r\n                        toggleEditSelectedThemeName(!editSelectedThemeName);\r\n                      }}\r\n                      name={editSelectedThemeName ? 'save-outline' : 'pencil-outline'}\r\n                    ></ion-icon>\r\n                    <p className=\"tooltiptext\">edit</p> \r\n                  </div>\r\n                  </CircularContainer>\r\n                </Wrapper>\r\n                <Wrapper\r\n                  width=\"1.5rem\"\r\n                  height=\"1.5rem\"\r\n                  className=\"selectedThemeButtonContainer\"\r\n                  margin=\"0.5rem\"\r\n                >\r\n                  <CircularContainer\r\n                    bgColor=\"white\"\r\n                    borderwidth=\"0px\"\r\n                    shadowBlur=\"0.2\"\r\n                  >\r\n                  <div className='tooltip'> \r\n\r\n                    <ion-icon\r\n                      onClick={() => {\r\n                        deleteTheme();\r\n                      }}\r\n                      name=\"trash-outline\"\r\n                    ></ion-icon>\r\n                    <p className=\"tooltiptext\">delete</p> \r\n                  </div>\r\n                  </CircularContainer>\r\n                </Wrapper>\r\n                </Wrapper>\r\n              ) : null}\r\n            </Wrapper>\r\n\r\n            <div className=\"grid\">\r\n              {/* new color button */}\r\n              {selectedTheme ? (\r\n                <ColorBox\r\n                  name=\"add new color\"\r\n                  iconName=\"add-circle-outline\"\r\n                  colorCircleSize=\"3rem\"\r\n                  disableButtons={true}\r\n                  margin=\"auto\"\r\n                  onClick={() => {\r\n                    createColor();\r\n                  }}\r\n                />\r\n              ) : null}\r\n              {newListOfColors}\r\n            </div>\r\n          </Container>\r\n        </Wrapper>\r\n\r\n          {/* Selected Theme Export */}\r\n          {selectedTheme ? \r\n        <Wrapper width=\"100%\" margin=\"auto auto 10vh auto\" height='auto'>\r\n          <Container width=\"100%\"margintop=\"3rem\" height='100%'>\r\n            <h1>\r\n              <span>colors.js</span>\r\n            </h1>\r\n            <Wrapper margin='auto auto 3rem auto' width='70%'>\r\n            <code>\r\n            {newJsExportOfColors}\r\n            <p>export {' {'}</p>\r\n            {newJsExportOfColors2}\r\n            <p>{'}'}</p>\r\n            <Wrapper\r\n                  width=\"1.5rem\"\r\n                  height=\"1.5rem\"\r\n                  className=\"selectedThemeButtonContainer\"\r\n                  margin=\"auto 0.5rem auto auto\"\r\n                >\r\n                  <CircularContainer\r\n                    bgColor=\"white\"\r\n                    borderwidth=\"0px\"\r\n                    shadowBlur=\"0\"\r\n                  >\r\n                  {/* <div className='tooltip'>  */}\r\n\r\n                    <ion-icon className='copyBtn'                    \r\n                      name=\"copy-outline\"\r\n                      onClick={()=>{ setClipboard( \r\n                          (exportText())\r\n                        ) }}\r\n                    ></ion-icon>\r\n                    {/* <p className='tooltiptext'>copy</p> */}\r\n                  {/* </div> */}\r\n                  </CircularContainer>\r\n              </Wrapper>\r\n            </code>\r\n            </Wrapper>\r\n          </Container>\r\n          </Wrapper>\r\n          :\r\n          null }\r\n      </Wrapper>\r\n      </Wrapper>\r\n    </Style>\r\n  );\r\n};\r\n\r\nexport default Themes;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport BigNavbar from \"./components/BigNavbar.js\";\nimport ToggleNavButton from \"./components/ToggleNavButton.js\";\nimport PageContainer from \"./components/PageContainer.js\";\nimport { Home, Login, Signup, Themes } from \"./pages\";\n\n\nconst checkPath = path => {\n  switch (path) {\n    case \"home\":\n      return <Redirect to=\"/\" />;\n      break;\n    case \"login\":\n      return <Redirect to=\"/login\" />;\n      break;\n    case \"signup\":\n      return <Redirect to=\"/signup\" />;\n      break;\n    case \"themes\":\n      return <Redirect to=\"/themes\" />;\n      break;\n    default:\n      break;\n  }\n};\n\nfunction App() {\n  const [loggedIn, toggleLoggedIn] = useState();\n  const [userId, setUserId] = useState('');\n  const [navToggled, toggleNav] = useState(false);\n  const [redirectPath, setRedirectPath] = useState();\n\n  const loadUser = (user) => {\n    toggleLoggedIn(true);\n    setUserId(user.user_id)\n    console.log('logged in ' + loggedIn)\n  }\n\n  const logOut = (user) => {\n    toggleLoggedIn(false);\n    setUserId('')\n    console.log('logged in ' + loggedIn)\n  }\n\n  return (\n    <div className=\"App\">\n      {/* Navbar */}\n      <BigNavbar\n        toggleNav={toggleNav}\n        navToggled={navToggled}\n        setRedirectPath={setRedirectPath}\n        loggedIn={loggedIn}\n        logOut={logOut}\n      />\n\n      <ToggleNavButton navToggled={navToggled} toggleNav={toggleNav} />\n      {/* Pages */}\n      <Router>\n        {checkPath(redirectPath)}\n\n        {/* Switch */}\n        <PageContainer marginleft={navToggled ? \"25vw\" : \"0px\"}>\n      {/* <h3>ColorItX</h3> */}\n          <Switch>\n            <Route path=\"/login\">\n              <Login loadUser={loadUser} setRedirectPath={setRedirectPath}/>\n            </Route>\n            <Route path=\"/signup\">\n              <Signup loadUser={loadUser} setRedirectPath={setRedirectPath}/>\n            </Route>\n            <Route path=\"/themes\">\n              <Themes user_id={userId} loggedIn={loggedIn} setRedirectPath={setRedirectPath}/>\n            </Route>\n            <Route exact path=\"/\">\n              <Home setRedirectPath={setRedirectPath} loggedIn={loggedIn} />\n            </Route>\n          </Switch>\n        </PageContainer>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}